<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.ex.model.Student">
    <id column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="student_pwd" jdbcType="VARCHAR" property="studentPwd" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_sex" jdbcType="VARCHAR" property="studentSex" />
    <result column="student_major" jdbcType="VARCHAR" property="studentMajor" />
    <result column="student_class" jdbcType="VARCHAR" property="studentClass" />
    <result column="student_tel" jdbcType="VARCHAR" property="studentTel" />
    <result column="student_email" jdbcType="VARCHAR" property="studentEmail" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    student_id, student_pwd, student_name, student_sex, student_major, student_class, 
    student_tel, student_email, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </select>

  <select id = "getStudentList" parameterType="java.lang.String" resultMap="BaseResultMap">
  		select * from Student
  	</select>
  <select id="getStudentById" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from Student
			where student.student_id=#{student_id}
	</select>
  <select id="queryExcelInfo" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from student
	</select>
  <select id="selectId" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from Student
			where student.student_id=#{student_id}
	</select>
  <delete id = "delStudentById" parameterType="String">
  		delete from student where student_id = #{studentId};
  	</delete>
  <delete id = "deleteStudent" parameterType="String">
  		delete from student where student_id = #{studentId};
  	</delete>
  <select id="selectStudentExistd" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from Student
			where student.student_id=#{student_id}
	</select>
  <select id="selectEmailExist" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from Student
			where student.student_email=#{student_email}
	</select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ex.model.Student">
    insert into student (student_id, student_pwd, student_name, 
      student_sex, student_major, student_class, 
      student_tel, student_email, is_delete
      )
    values (#{studentId,jdbcType=VARCHAR}, #{studentPwd,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{studentSex,jdbcType=VARCHAR}, #{studentMajor,jdbcType=VARCHAR}, #{studentClass,jdbcType=VARCHAR}, 
      #{studentTel,jdbcType=VARCHAR}, #{studentEmail,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ex.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentPwd != null">
        student_pwd,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentSex != null">
        student_sex,
      </if>
      <if test="studentMajor != null">
        student_major,
      </if>
      <if test="studentClass != null">
        student_class,
      </if>
      <if test="studentTel != null">
        student_tel,
      </if>
      <if test="studentEmail != null">
        student_email,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentPwd != null">
        #{studentPwd,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentSex != null">
        #{studentSex,jdbcType=VARCHAR},
      </if>
      <if test="studentMajor != null">
        #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="studentClass != null">
        #{studentClass,jdbcType=VARCHAR},
      </if>
      <if test="studentTel != null">
        #{studentTel,jdbcType=VARCHAR},
      </if>
      <if test="studentEmail != null">
        #{studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ex.model.Student">
    update student
    <set>
      <if test="studentPwd != null">
        student_pwd = #{studentPwd,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentSex != null">
        student_sex = #{studentSex,jdbcType=VARCHAR},
      </if>
      <if test="studentMajor != null">
        student_major = #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="studentClass != null">
        student_class = #{studentClass,jdbcType=VARCHAR},
      </if>
      <if test="studentTel != null">
        student_tel = #{studentTel,jdbcType=VARCHAR},
      </if>
      <if test="studentEmail != null">
        student_email = #{studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ex.model.Student">
    update student
    set student_pwd = #{studentPwd,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_sex = #{studentSex,jdbcType=VARCHAR},
      student_major = #{studentMajor,jdbcType=VARCHAR},
      student_class = #{studentClass,jdbcType=VARCHAR},
      student_tel = #{studentTel,jdbcType=VARCHAR},
      student_email = #{studentEmail,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
</mapper>