<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.dao.OrderBasisMapper">
  <resultMap id="BaseResultMap" type="com.ex.model.OrderBasis">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_money" jdbcType="VARCHAR" property="orderMoney" />
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, order_money, order_status, order_time, user_id
  </sql>
  <insert id="insert" parameterType="com.ex.model.OrderDetail">
    insert into order_basis (order_money, order_status, user_id)
    values (#{orderMoney,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER})
  </insert>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_basis
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <select id="selectByUserIdOrderBasis" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_basis
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_basis
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <select id="selectOrderBasisByNames" parameterType="String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_basis
    where order_id like concat('%',#{keyword},'%')
    or user_id like concat('%',#{keyword},'%')
  </select>
  <insert id="insertSelective" parameterType="com.ex.model.OrderBasis">
    insert into order_basis
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderMoney != null">
        order_money,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderMoney != null">
        #{orderMoney,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ex.model.OrderBasis">
    update order_basis
    <set>
      <if test="orderMoney != null">
        order_money = #{orderMoney,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ex.model.OrderBasis">
    update order_basis
    set order_money = #{orderMoney,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>