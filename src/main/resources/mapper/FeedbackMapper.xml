<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.dao.FeedbackMapper">
  <resultMap id="BaseResultMap" type="com.ex.model.Feedback">
    <id column="feedback_id" jdbcType="INTEGER" property="feedbackId" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="option_1" jdbcType="INTEGER" property="option1" />
    <result column="option_2" jdbcType="INTEGER" property="option2" />
    <result column="option_3" jdbcType="INTEGER" property="option3" />
    <result column="option_4" jdbcType="INTEGER" property="option4" />
    <result column="option_5" jdbcType="INTEGER" property="option5" />
    <result column="option_6" jdbcType="INTEGER" property="option6" />
    <result column="option_7" jdbcType="INTEGER" property="option7" />
    <result column="option_8" jdbcType="INTEGER" property="option8" />
    <result column="for_us" jdbcType="VARCHAR" property="forUs" />
  </resultMap>
  <sql id="Base_Column_List">
    feedback_id, teacher_id, student_id, project_id, option_1, option_2, option_3, option_4, 
    option_5, option_6, option_7, option_8, for_us
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from feedback
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from feedback
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ex.model.Feedback">
    insert into feedback (feedback_id, teacher_id, student_id, 
      project_id, option_1, option_2, 
      option_3, option_4, option_5, 
      option_6, option_7, option_8, 
      for_us)
    values (#{feedbackId,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=INTEGER}, #{option1,jdbcType=INTEGER}, #{option2,jdbcType=INTEGER}, 
      #{option3,jdbcType=INTEGER}, #{option4,jdbcType=INTEGER}, #{option5,jdbcType=INTEGER}, 
      #{option6,jdbcType=INTEGER}, #{option7,jdbcType=INTEGER}, #{option8,jdbcType=INTEGER}, 
      #{forUs,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ex.model.Feedback">
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackId != null">
        feedback_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="option1 != null">
        option_1,
      </if>
      <if test="option2 != null">
        option_2,
      </if>
      <if test="option3 != null">
        option_3,
      </if>
      <if test="option4 != null">
        option_4,
      </if>
      <if test="option5 != null">
        option_5,
      </if>
      <if test="option6 != null">
        option_6,
      </if>
      <if test="option7 != null">
        option_7,
      </if>
      <if test="option8 != null">
        option_8,
      </if>
      <if test="forUs != null">
        for_us,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackId != null">
        #{feedbackId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="option1 != null">
        #{option1,jdbcType=INTEGER},
      </if>
      <if test="option2 != null">
        #{option2,jdbcType=INTEGER},
      </if>
      <if test="option3 != null">
        #{option3,jdbcType=INTEGER},
      </if>
      <if test="option4 != null">
        #{option4,jdbcType=INTEGER},
      </if>
      <if test="option5 != null">
        #{option5,jdbcType=INTEGER},
      </if>
      <if test="option6 != null">
        #{option6,jdbcType=INTEGER},
      </if>
      <if test="option7 != null">
        #{option7,jdbcType=INTEGER},
      </if>
      <if test="option8 != null">
        #{option8,jdbcType=INTEGER},
      </if>
      <if test="forUs != null">
        #{forUs,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ex.model.Feedback">
    update feedback
    <set>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="option1 != null">
        option_1 = #{option1,jdbcType=INTEGER},
      </if>
      <if test="option2 != null">
        option_2 = #{option2,jdbcType=INTEGER},
      </if>
      <if test="option3 != null">
        option_3 = #{option3,jdbcType=INTEGER},
      </if>
      <if test="option4 != null">
        option_4 = #{option4,jdbcType=INTEGER},
      </if>
      <if test="option5 != null">
        option_5 = #{option5,jdbcType=INTEGER},
      </if>
      <if test="option6 != null">
        option_6 = #{option6,jdbcType=INTEGER},
      </if>
      <if test="option7 != null">
        option_7 = #{option7,jdbcType=INTEGER},
      </if>
      <if test="option8 != null">
        option_8 = #{option8,jdbcType=INTEGER},
      </if>
      <if test="forUs != null">
        for_us = #{forUs,jdbcType=VARCHAR},
      </if>
    </set>
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ex.model.Feedback">
    update feedback
    set teacher_id = #{teacherId,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=INTEGER},
      option_1 = #{option1,jdbcType=INTEGER},
      option_2 = #{option2,jdbcType=INTEGER},
      option_3 = #{option3,jdbcType=INTEGER},
      option_4 = #{option4,jdbcType=INTEGER},
      option_5 = #{option5,jdbcType=INTEGER},
      option_6 = #{option6,jdbcType=INTEGER},
      option_7 = #{option7,jdbcType=INTEGER},
      option_8 = #{option8,jdbcType=INTEGER},
      for_us = #{forUs,jdbcType=VARCHAR}
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
  <select id="getEvaluatedInfo" resultMap="BaseResultMap">
    select * from feedback
    where student_id = #{studentId}
    and project_id = #{projectId}
    and teacher_id = #{teacherId}
  </select>

  <!--管理员收集反馈-->
  <select id = "getFeedbackList" parameterType="java.lang.String" resultMap="BaseResultMap">
  		select * from Feedback
  	</select>
  <select id="selectId" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from Feedback
			where feedback.teacher_id=#{teacher_id}
	</select>
  <select id="lookTeacherId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from feedback
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>

</mapper>