<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.ex.model.Product">
    <id column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_original_price" jdbcType="DECIMAL" property="productOriginalPrice" />
    <result column="product_current_price" jdbcType="DECIMAL" property="productCurrentPrice" />
    <result column="product_stock" jdbcType="VARCHAR" property="productStock" />
    <result column="product_picture" jdbcType="VARCHAR" property="productPicture" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
  </resultMap>
  <sql id="Base_Column_List">
    product_id, product_name, product_original_price, product_current_price, product_stock, 
    product_picture, type_id
  </sql>
  <select id="findAllProduct" resultMap="BaseResultMap">
    select * from product
  </select>
  <select id="findProductsByName" parameterType="String" resultMap="BaseResultMap">
    select * from product
    where product_name like concat('%',#{keyword},'%')
    or product_id = #{keyword}
    or type_id = (select type_id from product_type where type_name like concat('%',#{keyword},'%'))
  </select>
  <select id="findProductByType" parameterType="Integer" resultMap="BaseResultMap">
    select * from product
    where type_id = #{type_id}
  </select>
  <select id="findProductById" parameterType="Integer" resultMap="BaseResultMap">
    select * from product where product_id = #{product_id}
  </select>
  <insert id="addProduct" parameterType="com.ex.model.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productOriginalPrice != null">
        product_original_price,
      </if>
      <if test="productCurrentPrice != null">
        product_current_price,
      </if>
      <if test="productStock != null">
        product_stock,
      </if>
      <if test="productPicture != null">
        product_picture,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productOriginalPrice != null">
        #{productOriginalPrice,jdbcType=DECIMAL},
      </if>
      <if test="productCurrentPrice != null">
        #{productCurrentPrice,jdbcType=DECIMAL},
      </if>
      <if test="productStock != null">
        #{productStock,jdbcType=VARCHAR},
      </if>
      <if test="productPicture != null">
        #{productPicture,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <delete id="delProduct" parameterType="java.lang.Integer">
    delete from product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <update id="updProductById" parameterType="com.ex.model.Product">
    update product
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productOriginalPrice != null">
        product_original_price = #{productOriginalPrice,jdbcType=DECIMAL},
      </if>
      <if test="productCurrentPrice != null">
        product_current_price = #{productCurrentPrice,jdbcType=DECIMAL},
      </if>
      <if test="productStock != null">
        product_stock = #{productStock,jdbcType=VARCHAR},
      </if>
      <if test="productPicture != null">
        product_picture = #{productPicture,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>